{"version":3,"sources":["reducers/initial-state.js","reducers/index.js","reducers/configs.js","reducers/decks.js","reducers/me.js","reducers/message.js","reducers/internet.js","reducers/players.js","reducers/socket.js","store/index.js","store/prod.js","shared/api/configs/create.js","shared/constants.js","shared/api/configs/index.js","shared/api/configs/get-by-name.js","shared/api/decks/index.js","shared/api/decks/get-all.js","shared/api/index.js","shared/api/errors/index.js","shared/api/errors/create.js","shared/api/stories/index.js","shared/api/stories/get-by-project.js","shared/socket/setup.js","shared/index.js","shared/socket/index.js","actions/message/index.js","actions/message/send.js","actions/players/index.js","actions/players/update.js","actions/index.js","actions/configs/index.js","actions/configs/update.js","actions/decks/index.js","actions/decks/update.js","actions/me/index.js","actions/me/connect.js","actions/me/disconnect.js","actions/me/reconnect.js","actions/me/update.js","components/Card/Back/Back.js","components/Card/Front/Front.js","components/Card/Card.js","components/Cards/Cards.js","components/Fab/Fab.js","components/Lobby/Lobby.js","components/Message/Message.js","components/Player/Player.js","components/Players/Players.js","components/TextBox/TextBox.js","components/Title/Title.js","containers/About/About.js","selectors/index.js","containers/DevTools/DevTools.js","selectors/cards/index.js","selectors/cards/get-by-deck.js","selectors/players/index.js","selectors/players/get-others.js","containers/Home/Head/MenuItem.js","containers/Home/Head/Menu.js","containers/Home/Head/Head.js","containers/Home/Home.js","containers/Home/index.js","containers/Login/Login.js","containers/Login/index.js","containers/Preview/Preview.js","containers/Preview/index.js","containers/Settings/Settings.js","containers/Settings/index.js","containers/Stories/Stories.js","containers/Stories/index.js","Router.js","App.js","error-handler.js","registerServiceWorker.js","index.js","actions/action-types.js"],"names":["initial_state","configs","stories","name","config","team","online","room","api","protocol","host","port","decks","List","internet","connected","me","id","card","message","text","type","players","socket","emit","__webpack_require__","d","__webpack_exports__","combineReducers","state","arguments","length","undefined","initialState","action","types","CONFIG","DECKS","ME","MESSAGE","INTERNET","PLAYERS","SOCKET","module","exports","require","r","redux__WEBPACK_IMPORTED_MODULE_0__","redux_devtools__WEBPACK_IMPORTED_MODULE_1__","_manaflair_redux_batch__WEBPACK_IMPORTED_MODULE_2__","redux_thunk__WEBPACK_IMPORTED_MODULE_3__","_reducers__WEBPACK_IMPORTED_MODULE_4__","enhancer","compose","reduxBatch","applyMiddleware","thunk","persistState","matches","window","location","href","match","getDebugSessionKey","createStore","rootReducer","store","app","db","version","description","constants","error","success","warning","urlEscape","&#9749;","configStore","localforage","createInstance","Object","objectSpread","storeName","api_configs","create","setItem","getByName","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","getItem","t0","sent","abrupt","stop","_x","apply","this","api_decks","getAll","Promise","resolve","cards","shared_api","errors","axios","post","concat","getByProject","project","opt","url","get","params","events","joined","left","chosen","revealed","cleared","shared","setup","dispatch","actions","send","_store$getState$confi","getState","openSocket","on","connect","reconnect","disconnect","data","update","actions_message","actions_players","users","values","filter","user","_ref$api","_ref$online","_ref$stories","Back","react_default","createElement","className","Front","dangerouslySetInnerHTML","__html","Card","props","Card_Front_Front","Card_Back_Back","Cards","map","key","Link","to","title","components_Card_Card","withStyles","theme","fab","position","bottom","spacing","unit","right","color","palette","common","white","classes","children","style","objectWithoutProperties","core_index_es","assign","classnames","variant","Players","player","Message","message--state-warning","message--state-error","message--state-success","Player","players__player--points-equal","players__player--points-different","components_Player_Player","TextBox","Title","icon","label","onClick","noWrap","About","render","components_Title_Title","index_es","_this","handleBack","src","width","height","alt","process","handleChoose","history","push","event","preventDefault","open","React","Component","selectors","createDevTools","redux_devtools_dock_monitor_lib_default","toggleVisibilityKey","changePositionKey","redux_devtools_log_monitor_lib_default","getByDeck","deck","reduce","curr","getOthers","excludeId","MenuItem","component","primary","paper","mdUp","ModalProps","keepMounted","onClose","Head_MenuItem","Head","handleClick","Home_Head_Menu","setState","Home","Head_Head","components_Message_Message","Lobby_Lobby","components_Cards_Cards","Fab","badge","disabled","login-button--logged-out","login-button--logged-in","login-button--disconnected","Login","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","_this$state","autoComplete","onSubmit","handleSubmit","components_TextBox_TextBox","value","onChange","handleInputChange","required","inputProps","maxLength","_event$target","target","defineProperty","toLowerCase","_this$state2","Preview","componentDidMount","components_Players_Players","role","_this$props","Settigs","apiConfig","onlineConfig","subheader","func","storiesConfig","updateConfigs","Settings","Stories","handlePointsBlur","getStories","handlePointsChange","points","onBlur","story","secondary","Router","HashRouter","Route","exact","path","createMuiTheme","light","blueGrey","main","dark","typography","useNextVariants","App","styles","src_Router","errorStore","error_handler","source","lineno","colno","log","Date","now","toString","stack","_x2","_x3","_x4","_x5","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","catch","onerror","errorHandler","configureStore","init","es","src_App_0","document","getElementById","URL","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.84990fc2.chunk.js","sourcesContent":["import { List } from 'immutable';\r\n\r\nexport default {\r\n  configs: {\r\n    stories: {\r\n      name: 'stories',\r\n      config: {\r\n        team: '',\r\n      },\r\n    },\r\n    online: {\r\n      name: 'online',\r\n      config: {\r\n        room: '',\r\n        name: '',\r\n      },\r\n    },\r\n    api: {\r\n      name: 'api',\r\n      config: {\r\n        protocol: 'https',\r\n        host: 'planning-poker-api.herokuapp.com',\r\n        port: '443',\r\n      },\r\n    },\r\n  },\r\n  decks: new List(),\r\n  internet: {\r\n    connected: false,\r\n  },\r\n  me: {\r\n    id: '',\r\n    name: '',\r\n    card: '',\r\n    room: '',\r\n  },\r\n  message: {\r\n    text: '',\r\n    type: '',\r\n  },\r\n  players: new List(),\r\n  socket: {\r\n    emit: () => {},\r\n  },\r\n};\r\n","import { combineReducers } from 'redux';\r\n\r\nimport configs from './configs';\r\nimport decks from './decks';\r\nimport me from './me';\r\nimport message from './message';\r\nimport internet from './internet';\r\nimport players from './players';\r\nimport socket from './socket';\r\n\r\nexport { default as initialState } from './initial-state';\r\n\r\nexport default combineReducers({\r\n  configs,\r\n  decks,\r\n  me,\r\n  message,\r\n  internet,\r\n  players,\r\n  socket,\r\n});\r\n","import initialState from './initial-state';\r\nimport types from '../actions/action-types';\r\n\r\nexport default (state = initialState.configs, action) => {\r\n  switch (action.type) {\r\n    case types.CONFIG:\r\n      return action.configs;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import initialState from './initial-state';\r\nimport types from '../actions/action-types';\r\n\r\nexport default (state = initialState.decks, action) => {\r\n  switch (action.type) {\r\n    case types.DECKS:\r\n      return action.decks;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import initialState from './initial-state';\r\nimport types from '../actions/action-types';\r\n\r\nexport default (state = initialState.me, action) => {\r\n  switch (action.type) {\r\n    case types.ME:\r\n      return action.me;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import initialState from './initial-state';\r\nimport types from '../actions/action-types';\r\n\r\nexport default (state = initialState.message, action) => {\r\n  switch (action.type) {\r\n    case types.MESSAGE:\r\n      return action.message;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import initialState from './initial-state';\r\nimport types from '../actions/action-types';\r\n\r\nexport default (state = initialState.internet, action) => {\r\n  switch (action.type) {\r\n    case types.INTERNET:\r\n      return action.internet;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import initialState from './initial-state';\r\nimport types from '../actions/action-types';\r\n\r\nexport default (state = initialState.players, action) => {\r\n  switch (action.type) {\r\n    case types.PLAYERS:\r\n      return action.players;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import initialState from './initial-state';\r\nimport types from '../actions/action-types';\r\n\r\nexport default (state = initialState.socket, action) => {\r\n  switch (action.type) {\r\n    case types.SOCKET:\r\n      return action.socket;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","if (process.env.NODE_ENV === 'production') {\r\n  module.exports = require('./prod');\r\n} else {\r\n  module.exports = require('./dev');\r\n}\r\n","import { createStore, compose, applyMiddleware } from 'redux';\r\nimport { persistState } from 'redux-devtools';\r\nimport { reduxBatch } from '@manaflair/redux-batch';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport rootReducer from '../reducers';\r\n\r\nconst enhancer = compose(\r\n  reduxBatch,\r\n  applyMiddleware(thunk),\r\n  persistState(getDebugSessionKey())\r\n);\r\n\r\nfunction getDebugSessionKey() {\r\n  const matches = window.location.href.match(/[?&]debug_session=([^&]+)\\b/);\r\n\r\n  return matches && matches.length > 0 ? matches[1] : null;\r\n}\r\n\r\nexport default (initialState) => {\r\n  const store = createStore(rootReducer, initialState, enhancer);\r\n\r\n  if (module.hot) {\r\n    module.hot.accept('../reducers', () => store.replaceReducer(require('../reducers')));\r\n  }\r\n\r\n  return store;\r\n};\r\n","export default (store) => (config) => store.setItem(config.name, config);\r\n","export const app = {\r\n  db: {\r\n    name: 'planning-poker',\r\n    version: 1.0,\r\n    description: 'planning poker store',\r\n  },\r\n};\r\n\r\nexport const message = {\r\n  types: {\r\n    error: 'error',\r\n    success: 'success',\r\n    warning: 'warning',\r\n  },\r\n};\r\n\r\nexport const urlEscape = {\r\n  '&#9749;': '%E2%98%95',\r\n};\r\n\r\nexport default {\r\n  app,\r\n  message,\r\n  urlEscape,\r\n};\r\n","import localforage from 'localforage';\r\n\r\nimport { app } from '../../../shared/constants';\r\nimport create from './create';\r\nimport getByName from './get-by-name';\r\n\r\nconst configStore = localforage.createInstance({\r\n  ...app.db,\r\n  storeName: 'config',\r\n});\r\n\r\nexport default {\r\n  create: create(configStore),\r\n  getByName: getByName(configStore),\r\n};\r\n","export default (store) => async (name) => await store.getItem(name) || undefined;\r\n","import getAll from './get-all';\r\n\r\nexport default {\r\n  getAll,\r\n};\r\n","import { List } from 'immutable';\r\n\r\nexport default () => new Promise((resolve) => resolve(new List([\r\n  {\r\n    name: 'fibonacci',\r\n    cards: new List(['0', '1', '2', '3', '5', '8', '13', '20', '40', '&infin;', '&quest;', '&#9749;']),\r\n  },\r\n])));\r\n","import configs from './configs';\r\nimport decks from './decks';\r\nimport errors from './errors';\r\nimport stories from './stories';\r\n\r\nexport default {\r\n  configs,\r\n  decks,\r\n  errors,\r\n  stories,\r\n};\r\n","import create from './create';\r\n\r\nexport default {\r\n  create,\r\n};\r\n","import axios from 'axios';\r\n\r\nexport default (error, config) => {\r\n  if (!config) {\r\n    return;\r\n  }\r\n\r\n  return axios.post(`${config.protocol}://${config.host}:${config.port}/errors`, error);\r\n};\r\n","import getByProject from './get-by-project';\r\n\r\nexport default {\r\n  getByProject,\r\n};\r\n","import axios from 'axios';\r\n\r\nexport default (project, opt, config) => {\r\n  const url = `${config.protocol}://${config.host}:${config.port}/projects/${project}/stories`;\r\n\r\n  return axios.get(url, {\r\n    params: opt,\r\n  });\r\n};\r\n","import openSocket from 'socket.io-client';\r\n\r\nimport shared from '..';\r\nimport actions from '../../actions';\r\n\r\nconst events = {\r\n  joined: 'joined',\r\n  chosen: 'chosen',\r\n  user: {\r\n    joined: 'user:joined',\r\n    left: 'user:left',\r\n  },\r\n  card: {\r\n    chosen: 'card:chosen',\r\n    revealed: 'card:revealed',\r\n    cleared: 'card:cleared',\r\n  },\r\n  connect: 'connect',\r\n  reconnecting: 'reconnecting',\r\n  reconnectFailed: 'reconnect_failed',\r\n};\r\n\r\nexport default (store) => {\r\n  store.dispatch(actions.message.send({ text: 'connecting...', type: shared.constants.message.types.warning }));\r\n\r\n  const { config: { protocol, host, port } } = store.getState().configs.api;\r\n  const socket = openSocket(`${protocol}://${host}:${port}`);\r\n\r\n  socket.on(events.connect, () => store.dispatch(actions.me.connect(socket, store.getState().me)));\r\n  socket.on(events.reconnecting, () => store.dispatch(actions.me.reconnect()));\r\n  socket.on(events.reconnectFailed, () => store.dispatch(actions.me.disconnect()));\r\n\r\n  socket.on(events.joined, (data) => store.dispatch(actions.me.update(data)));\r\n\r\n  socket.on(events.user.joined, (data) => store.dispatch(actions.players.update(data)));\r\n  socket.on(events.user.left, (data) => store.dispatch(actions.players.update(data)));\r\n  socket.on(events.card.revealed, (data) => store.dispatch(actions.players.update(data)));\r\n  socket.on(events.card.cleared, (data) => store.dispatch(actions.players.update(data)));\r\n};\r\n","import api from './api';\r\nimport constants from './constants';\r\nimport socket from './socket';\r\n\r\nexport default {\r\n  api,\r\n  constants,\r\n  socket,\r\n};\r\n","import setup from './setup';\r\n\r\nexport default {\r\n  setup,\r\n};\r\n","import send from './send';\r\n\r\nexport default {\r\n  send,\r\n};\r\n","import { initialState } from '../../reducers';\r\nimport types from '../action-types';\r\n\r\nexport default (message = initialState.message) => ({\r\n  type: types.MESSAGE,\r\n  message,\r\n});\r\n","import update from './update';\r\n\r\nexport default {\r\n  update,\r\n};\r\n","import { List } from 'immutable';\r\n\r\nimport { initialState } from '../../reducers';\r\nimport types from '../action-types';\r\n\r\nexport default (data = { users: initialState.players }) => ({\r\n  type: types.PLAYERS,\r\n  players: new List(Object.values(data.users).filter((user) => user && user.id && typeof user !== 'function')),\r\n});\r\n","import configs from './configs';\r\nimport decks from './decks';\r\nimport me from './me';\r\nimport message from './message';\r\nimport players from './players';\r\nimport types from './action-types';\r\n\r\nexport default {\r\n  configs,\r\n  decks,\r\n  me,\r\n  message,\r\n  players,\r\n  types,\r\n};\r\n","import update from './update';\r\n\r\nexport default {\r\n  update,\r\n};\r\n","import { initialState } from '../../reducers';\r\nimport types from '../action-types';\r\nimport shared from '../../shared';\r\n\r\nexport default ({\r\n  api = initialState.configs.api,\r\n  online = initialState.configs.online,\r\n  stories = initialState.configs.stories,\r\n}) => {\r\n  shared.api.configs.create(api);\r\n  shared.api.configs.create(online);\r\n  shared.api.configs.create(stories);\r\n\r\n  return {\r\n    type: types.CONFIG,\r\n    configs: {\r\n      api,\r\n      online,\r\n      stories,\r\n    },\r\n  };\r\n};\r\n","import update from './update';\r\n\r\nexport default {\r\n  update,\r\n};\r\n","import { List } from 'immutable';\r\n\r\nimport { initialState } from '../../reducers';\r\nimport types from '../action-types';\r\n\r\nexport default (decks = initialState.decks) => ({\r\n  type: types.DECKS,\r\n  decks: new List(decks),\r\n});\r\n","import connect from './connect';\r\nimport disconnect from './disconnect';\r\nimport reconnect from './reconnect';\r\nimport update from './update';\r\n\r\nexport default {\r\n  connect,\r\n  disconnect,\r\n  reconnect,\r\n  update,\r\n};\r\n","import message from '../message';\r\nimport types from '../action-types';\r\n\r\nexport default (socket, { name, room }) => {\r\n  if (room) {\r\n    socket.emit('join', { name, room });\r\n  }\r\n\r\n  return [\r\n    {\r\n      type: types.SOCKET,\r\n      socket,\r\n    },\r\n    message.send(),\r\n    {\r\n      type: types.INTERNET,\r\n      internet: {\r\n        connected: true,\r\n      },\r\n    },\r\n  ];\r\n};\r\n","import { initialState } from '../../reducers';\r\nimport shared from '../../shared';\r\nimport message from '../message';\r\nimport types from '../action-types';\r\n\r\nexport default () => ([\r\n  message.send({ text: 'disconnected', type: shared.constants.message.types.error }),\r\n  {\r\n    type: types.INTERNET,\r\n    internet: initialState.internet,\r\n  },\r\n  {\r\n    type: types.SOCKET,\r\n    socket: initialState.socket,\r\n  },\r\n]);\r\n","import { initialState } from '../../reducers';\r\nimport shared from '../../shared';\r\nimport message from '../message';\r\nimport players from '../players';\r\nimport types from '../action-types';\r\n\r\nexport default () => ([\r\n  message.send({ text: 'reconnecting...', type: shared.constants.message.types.warning }),\r\n  players.update(),\r\n  {\r\n    type: types.INTERNET,\r\n    internet: initialState.internet,\r\n  },\r\n]);\r\n","import players from '../players';\r\nimport types from '../action-types';\r\n\r\nexport default (data) => ([\r\n  players.update(data),\r\n  {\r\n    type: types.ME,\r\n    me: {\r\n      id: data.user.id,\r\n      name: data.user.name,\r\n      card: data.card || '',\r\n      room: data.room,\r\n    },\r\n  },\r\n]);\r\n","import React from 'react';\r\n\r\nimport './Back.css';\r\n\r\nconst Back = () => (\r\n  <div className=\"card-back\">\r\n    <div className=\"card-back__content\">\r\n      <h1 className=\"card-back__title\">PLANNING</h1>\r\n      <h2 className=\"card-back__subtitle\">\r\n        <sup className=\"card-back__title-mark\">SCRUM</sup>POKER\r\n      </h2>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Back;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Front.css';\r\n\r\nconst Front = ({ card }) => (\r\n  <div className=\"card\">\r\n    <div className=\"card__mark\">\r\n      <span dangerouslySetInnerHTML={ { __html: card } } />\r\n    </div>\r\n\r\n    <div className=\"card__points\">\r\n      <span dangerouslySetInnerHTML={ { __html: card } } />\r\n    </div>\r\n\r\n    <div className=\"card__mark-upside-down\">\r\n      <span dangerouslySetInnerHTML={ { __html: card } } />\r\n    </div>\r\n  </div>\r\n);\r\n\r\nFront.propTypes = {\r\n  card: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Front;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Back from './Back';\r\nimport Front from './Front';\r\n\r\nconst Card = (props) => props.card ? <Front { ...props } /> : <Back />;\r\n\r\nCard.propTypes = {\r\n  card: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport shared from '../../shared';\r\nimport { Card } from '..';\r\nimport './Cards.css';\r\n\r\nconst Cards = ({ cards }) => (\r\n  <ul className=\"cards\">\r\n    {\r\n      cards.map((card) => (\r\n        <li className=\"cards__card\" key={ card }>\r\n          <Link to={ `/cards/${shared.constants.urlEscape[card] || card}` } title={ `Card ${card}` }>\r\n            <Card card={ card } />\r\n          </Link>\r\n        </li>\r\n      ))\r\n    }\r\n  </ul>\r\n);\r\n\r\nCards.propTypes = {\r\n  cards: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Cards;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\nimport { Fab } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = (theme) => ({\r\n  fab: {\r\n    position: 'absolute',\r\n    bottom: theme.spacing.unit * 2,\r\n    right: theme.spacing.unit * 2,\r\n    color: theme.palette.common.white,\r\n  },\r\n});\r\n\r\nconst FabCustom = ({ classes, children, style, ...config }) => (\r\n  <Fab\r\n    className={ classnames(classes.fab, style) }\r\n    variant=\"round\"\r\n    { ...config }>\r\n    { children }\r\n  </Fab>\r\n);\r\n\r\nFabCustom.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  children: PropTypes.element.isRequired,\r\n  style: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(FabCustom);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Lobby.css';\r\n\r\nconst Players = ({ players }) => (\r\n  <ul className=\"lobby\">\r\n    {\r\n      players.map((player) => (\r\n        <li className=\"lobby__player\" key={ player.id }>\r\n          <div className=\"lobby__player-content\">\r\n            <span className=\"lobby__player-name\">{ player.name }</span>\r\n          </div>\r\n        </li>\r\n      ))\r\n    }\r\n  </ul>\r\n);\r\n\r\nPlayers.propTypes = {\r\n  me: PropTypes.object.isRequired,\r\n  players: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Players;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\nimport shared from '../../shared';\r\nimport './Message.css';\r\n\r\nconst Message = ({ message }) => (\r\n  <div\r\n    className={ classnames(\r\n      'message',\r\n      { 'message--state-warning': message.type === shared.constants.message.types.warning },\r\n      { 'message--state-error': message.type === shared.constants.message.types.error },\r\n      { 'message--state-success': message.type === shared.constants.message.types.success },\r\n    ) }>\r\n    { message.text }\r\n  </div>\r\n);\r\n\r\nMessage.propTypes = {\r\n  message: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Message;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\nimport './Player.css';\r\n\r\nconst Player = ({ me, player }) => (\r\n  <div\r\n    className={ classnames(\r\n      'players__player',\r\n      { 'players__player--points-equal': player.card && player.card === me.card },\r\n      { 'players__player--points-different': player.card && player.card !== me.card },\r\n    ) }>\r\n    <div className=\"players__player-mark\">\r\n      <span dangerouslySetInnerHTML={ { __html: player.card } } />\r\n    </div>\r\n\r\n    <div className=\"players__player-content\">\r\n      { player.name }\r\n    </div>\r\n  </div>\r\n);\r\n\r\nPlayer.propTypes = {\r\n  me: PropTypes.object.isRequired,\r\n  player: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Player;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Player } from '..';\r\nimport './Players.css';\r\n\r\nconst Players = ({ me, players }) => (\r\n  <ul className=\"players\">\r\n    {\r\n      players.map((player) => (\r\n        <li key={ player.id }>\r\n          <Player me={ me } player={ player } />\r\n        </li>\r\n      ))\r\n    }\r\n  </ul>\r\n);\r\n\r\nPlayers.propTypes = {\r\n  me: PropTypes.object.isRequired,\r\n  players: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Players;\r\n","import React from 'react';\r\nimport { TextField } from '@material-ui/core';\r\n\r\nconst TextBox = (props) => (\r\n  <TextField { ...props } />\r\n);\r\n\r\nexport default TextBox;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { AppBar, Toolbar, Typography, IconButton } from '@material-ui/core';\r\n\r\nconst Title = ({ icon, label, onClick }) => (\r\n  <AppBar>\r\n    <Toolbar>\r\n      <IconButton color=\"inherit\" onClick={ onClick }>\r\n        { icon }\r\n      </IconButton>\r\n      <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n        { label }\r\n      </Typography>\r\n    </Toolbar>\r\n  </AppBar>\r\n);\r\n\r\nTitle.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n  icon: PropTypes.element.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Title;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { ChevronLeft, Public } from '@material-ui/icons';\r\n\r\nimport { Title } from '../../components';\r\nimport './About.css';\r\n\r\nexport default class About extends React.Component {\r\n  static propTypes = {\r\n    history: PropTypes.object.isRequired,\r\n  };\r\n\r\n  render = () => (\r\n    <div>\r\n      <Title\r\n        label=\"About\"\r\n        icon={ <ChevronLeft /> }\r\n        onClick={ this.handleBack } />\r\n      <main className=\"about-list\">\r\n        <div className=\"about-list__item\">\r\n          <div className=\"about__logo-image\">\r\n            <img src=\"img/logo.png\" width=\"96\" height=\"96\" alt=\"Logo\" />\r\n          </div>\r\n\r\n          <div className=\"about__product-name\">\r\n            { process.env.REACT_APP_NAME }\r\n          </div>\r\n\r\n          <span>\r\n            { process.env.REACT_APP_DESCRIPTION }\r\n          </span>\r\n        </div>\r\n\r\n        <div className=\"about-list__item\">\r\n          <h2 className=\"about__product-version\">\r\n            Version\r\n            <p>{ process.env.REACT_APP_VERSION }</p>\r\n          </h2>\r\n        </div>\r\n\r\n        <div className=\"about-list__item\">\r\n          <button\r\n            className=\"about__form-button\"\r\n            onClick={ this.handleChoose }>\r\n            <i className=\"about__form-icon\">\r\n              <Public />\r\n            </i>\r\n          </button>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n\r\n  handleBack = () => {\r\n    this.props.history.push('/');\r\n  };\r\n\r\n  handleChoose = (event) => {\r\n    event.preventDefault();\r\n    window.open('https://github.com/jroliveira/planning-poker-game', '_system', 'location=yes');\r\n  };\r\n}\r\n","import cards from './cards';\r\nimport decks from './decks';\r\nimport players from './players';\r\nimport stories from './stories';\r\n\r\nexport default {\r\n  cards,\r\n  decks,\r\n  players,\r\n  stories,\r\n};\r\n","import React from 'react';\r\n\r\nimport { createDevTools } from 'redux-devtools';\r\nimport LogMonitor from 'redux-devtools-log-monitor';\r\nimport DockMonitor from 'redux-devtools-dock-monitor';\r\n\r\nconst DevTools = createDevTools(\r\n  <DockMonitor\r\n    toggleVisibilityKey=\"ctrl-h\"\r\n    changePositionKey=\"ctrl-q\">\r\n    <LogMonitor theme=\"tomorrow\" />\r\n  </DockMonitor>\r\n);\r\n\r\nexport default DevTools;\r\n","import getByDeck from './get-by-deck';\r\n\r\nexport default {\r\n  getByDeck,\r\n};\r\n","import { List } from 'immutable';\r\n\r\nexport default (decks, name) => decks\r\n  .filter((deck) => deck.name === name)\r\n  .map((deck) => deck.cards)\r\n  .reduce((prev, curr) => prev.concat(curr)) || new List();\r\n","import getOthers from './get-others';\r\n\r\nexport default {\r\n  getOthers,\r\n};\r\n","export default (players, excludeId) => players.filter((player) => player.id !== excludeId);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { ListItem, ListItemIcon, ListItemText } from '@material-ui/core';\r\n\r\nconst MenuItem = ({ children, label, to }) => (\r\n  <ListItem\r\n    component={ Link }\r\n    to={ to }\r\n    title={ label }>\r\n    <ListItemIcon>\r\n      { children }\r\n    </ListItemIcon>\r\n    <ListItemText primary={ label } />\r\n  </ListItem>\r\n);\r\n\r\nMenuItem.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  to: PropTypes.string.isRequired,\r\n  children: PropTypes.element.isRequired,\r\n};\r\n\r\nexport default MenuItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Drawer, Hidden, IconButton, List } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { ChevronLeft, InfoOutlined, SettingsApplications } from '@material-ui/icons';\r\n\r\nimport MenuItem from './MenuItem';\r\nimport './Menu.css';\r\n\r\nconst styles = () => ({\r\n  paper: {\r\n    width: 270,\r\n  },\r\n});\r\n\r\nconst Menu = (props) => (\r\n  <Hidden mdUp>\r\n    <Drawer\r\n      { ...props }\r\n      className=\"menu\"\r\n      variant=\"persistent\"\r\n      ModalProps={ { keepMounted: true } }>\r\n      <div className=\"menu__header\">\r\n        <div className=\"menu__button-back\">\r\n          <IconButton onClick={ props.onClose }>\r\n            { <ChevronLeft /> }\r\n          </IconButton>\r\n        </div>\r\n\r\n        <img\r\n          className=\"menu__logo-image\"\r\n          src=\"img/logo.png\"\r\n          height=\"65\"\r\n          width=\"65\"\r\n          alt=\"Logo\" />\r\n\r\n        <div className=\"menu__title\">\r\n          { process.env.REACT_APP_NAME }\r\n        </div>\r\n      </div>\r\n\r\n      <List>\r\n        <MenuItem label=\"About\" to=\"/about\">\r\n          <InfoOutlined />\r\n        </MenuItem>\r\n        <MenuItem label=\"Settings\" to=\"/settings\">\r\n          <SettingsApplications />\r\n        </MenuItem>\r\n      </List>\r\n    </Drawer>\r\n  </Hidden>\r\n);\r\n\r\nMenu.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Menu);\r\n","import React from 'react';\r\nimport { Menu as MenuIcon } from '@material-ui/icons';\r\n\r\nimport { Title } from '../../../components';\r\nimport Menu from './Menu';\r\n\r\nexport default class Head extends React.Component {\r\n  state = {\r\n    open: false,\r\n  };\r\n\r\n  render = () => (\r\n    <div>\r\n      <Title\r\n        label={ process.env.REACT_APP_NAME }\r\n        icon={ <MenuIcon /> }\r\n        onClick={ this.handleClick } />\r\n\r\n      <Menu\r\n        onClose={ this.handleClick }\r\n        open={ this.state.open } />\r\n    </div>\r\n  );\r\n\r\n  handleClick = () => {\r\n    this.setState({ open: !this.state.open });\r\n  };\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport classnames from 'classnames';\r\nimport { Cloud } from '@material-ui/icons';\r\n\r\nimport { Cards, Fab, Lobby, Message } from '../../components';\r\nimport Head from './Head';\r\nimport './Home.css';\r\n\r\nconst Home = ({ cards, me, message, players, internet }) => (\r\n  <div>\r\n    <Head />\r\n    <main className=\"home\">\r\n      <Message message={ message } />\r\n      <Lobby me={ me } players={ players } />\r\n      <Cards cards={ cards } />\r\n\r\n      <Fab\r\n        badge={ 2 }\r\n        color=\"inherit\"\r\n        component={ Link }\r\n        title=\"Login\"\r\n        to=\"/login\"\r\n        disabled={ !internet.connected }\r\n        style={ classnames(\r\n          { 'login-button--logged-out': me.id === '' && internet.connected },\r\n          { 'login-button--logged-in': me.id !== '' && internet.connected },\r\n          { 'login-button--disconnected': !internet.connected }\r\n        ) }>\r\n        <Cloud />\r\n      </Fab>\r\n    </main>\r\n  </div>\r\n);\r\n\r\nHome.propTypes = {\r\n  cards: PropTypes.object.isRequired,\r\n  internet: PropTypes.object.isRequired,\r\n  me: PropTypes.object.isRequired,\r\n  message: PropTypes.object.isRequired,\r\n  players: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Home;\r\n","import { connect } from 'react-redux';\r\n\r\nimport selectors from '../../selectors';\r\nimport Home from './Home';\r\n\r\nexport default connect((state) => ({\r\n  cards: selectors.cards.getByDeck(state.decks, process.env.REACT_APP_DEFAULTS_DECK),\r\n  internet: state.internet,\r\n  me: state.me,\r\n  message: state.message,\r\n  players: selectors.players.getOthers(state.players, state.me.id),\r\n}), {})(Home);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\nimport { ChevronLeft, Send } from '@material-ui/icons';\r\n\r\nimport { Fab, TextBox, Title } from '../../components';\r\nimport './Login.css';\r\n\r\nexport default class Login extends React.Component {\r\n  static propTypes = {\r\n    history: PropTypes.object.isRequired,\r\n    socket: PropTypes.object.isRequired,\r\n    online: PropTypes.object.isRequired,\r\n  };\r\n\r\n  constructor({ online }) {\r\n    super();\r\n\r\n    this.state = {\r\n      name: online.name,\r\n      room: online.room,\r\n    };\r\n  }\r\n\r\n  render = () => {\r\n    const { name, room } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Title\r\n          label=\"Login\"\r\n          icon={ <ChevronLeft /> }\r\n          onClick={ this.handleBack } />\r\n        <form className=\"login-form\" autoComplete=\"off\" onSubmit={ this.handleSubmit }>\r\n          <TextBox\r\n            name=\"room\"\r\n            label=\"Room\"\r\n            value={ room }\r\n            onChange={ this.handleInputChange }\r\n            required />\r\n\r\n          <TextBox\r\n            name=\"name\"\r\n            label=\"Name\"\r\n            value={ name }\r\n            onChange={ this.handleInputChange }\r\n            inputProps={ {\r\n              maxLength: '2',\r\n            } }\r\n            required />\r\n\r\n          <Fab\r\n            type=\"submit\"\r\n            color=\"primary\"\r\n            style={ classnames('login-button') }>\r\n            <Send />\r\n          </Fab>\r\n        </form>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    this.setState({ [name]: value.toLowerCase() });\r\n  };\r\n\r\n  handleBack = () => {\r\n    this.props.history.push('/');\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const { name, room } = this.state;\r\n\r\n    this.props.socket.emit('join', { name, room });\r\n    this.handleBack();\r\n  };\r\n}\r\n","import { connect } from 'react-redux';\r\n\r\nimport Login from './Login';\r\n\r\nexport default connect((state) => ({\r\n  message: state.message,\r\n  online: state.configs.online.config,\r\n  socket: state.socket,\r\n}), {})(Login);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Card, Message, Players } from '../../components';\r\nimport './Preview.css';\r\n\r\nexport default class Preview extends React.Component {\r\n  static propTypes = {\r\n    socket: PropTypes.object.isRequired,\r\n    history: PropTypes.object.isRequired,\r\n    match: PropTypes.object.isRequired,\r\n    me: PropTypes.object.isRequired,\r\n    message: PropTypes.object.isRequired,\r\n    players: PropTypes.object.isRequired,\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    this.revealed = false;\r\n  }\r\n\r\n  state = {\r\n    card: '',\r\n  };\r\n\r\n  componentDidMount = () => this.props.socket.emit('card:chosen', this.props.match.params.card);\r\n\r\n  render = () => (\r\n    <main className=\"preview\">\r\n      <Message message={ this.props.message } />\r\n      <Players me={ this.props.me } players={ this.props.players } />\r\n      <div className=\"card-front\" onClick={ this.handleClick } role=\"button\">\r\n        <Card card={ this.state.card } />\r\n      </div>\r\n    </main>\r\n  );\r\n\r\n  handleClick = () => {\r\n    const { history, match, socket } = this.props;\r\n\r\n    if (this.revealed) {\r\n      socket.emit('card:cleared');\r\n      history.push('/');\r\n\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      card: match.params.card,\r\n    });\r\n\r\n    socket.emit('card:reveal', this.state.card);\r\n    this.revealed = true;\r\n  };\r\n}\r\n","import { connect } from 'react-redux';\r\nimport Preview from './Preview';\r\nimport selectors from '../../selectors';\r\n\r\nexport default connect((state) => ({\r\n  me: state.me,\r\n  message: state.message,\r\n  players: selectors.players.getOthers(state.players, state.me.id),\r\n  socket: state.socket,\r\n}), {})(Preview);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { ChevronLeft } from '@material-ui/icons';\r\nimport {\r\n  Divider,\r\n  List,\r\n  ListItem,\r\n  ListSubheader,\r\n  TextField,\r\n} from '@material-ui/core';\r\n\r\nimport { Title } from '../../components';\r\nimport './Settings.css';\r\n\r\nexport default class Settigs extends React.Component {\r\n  static propTypes = {\r\n    history: PropTypes.object.isRequired,\r\n    configs: PropTypes.object.isRequired,\r\n    updateConfigs: PropTypes.func.isRequired,\r\n  };\r\n\r\n  constructor({ configs }) {\r\n    super();\r\n    const { api, online, stories } = configs;\r\n\r\n    this.state = {\r\n      apiConfig: api.config,\r\n      onlineConfig: online.config,\r\n      storiesConfig: stories.config,\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const { apiConfig, onlineConfig } = this.state;\r\n\r\n    this.props.updateConfigs({\r\n      api: {\r\n        name: 'api',\r\n        config: {\r\n          protocol: apiConfig.protocol,\r\n          host: apiConfig.host,\r\n          port: apiConfig.port,\r\n        },\r\n      },\r\n      online: {\r\n        name: 'online',\r\n        config: {\r\n          room: onlineConfig.room,\r\n          name: onlineConfig.name,\r\n        },\r\n      },\r\n    });\r\n  }\r\n\r\n  render = () => {\r\n    const { apiConfig, onlineConfig } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Title\r\n          label=\"Settings\"\r\n          icon={ <ChevronLeft /> }\r\n          onClick={ this.handleBack } />\r\n\r\n        <main className=\"settings-list\">\r\n          <List subheader={ <ListSubheader>Online</ListSubheader> }>\r\n            <ListItem>\r\n              <form className=\"settings-form\" autoComplete=\"off\">\r\n                <TextField\r\n                  id=\"onlineRoom\"\r\n                  label=\"Room\"\r\n                  value={ onlineConfig.room }\r\n                  onChange={ this.handleInputChange((state, value) => ({ onlineConfig: { ...state.onlineConfig, room: value.toLowerCase() } })) } />\r\n\r\n                <TextField\r\n                  id=\"onlineName\"\r\n                  label=\"Name\"\r\n                  value={ onlineConfig.name }\r\n                  onChange={ this.handleInputChange((state, value) => ({ onlineConfig: { ...state.onlineConfig, name: value.toLowerCase() } })) }\r\n                  inputProps={ {\r\n                    maxLength: '2',\r\n                  } } />\r\n              </form>\r\n            </ListItem>\r\n          </List>\r\n\r\n          <Divider />\r\n\r\n          <List subheader={ <ListSubheader>API</ListSubheader> }>\r\n            <ListItem>\r\n              <form className=\"settings-form\" autoComplete=\"off\">\r\n                <TextField\r\n                  id=\"apiProtocol\"\r\n                  label=\"Protocol\"\r\n                  value={ apiConfig.protocol }\r\n                  onChange={ this.handleInputChange((state, value) => ({ apiConfig: { ...state.apiConfig, protocol: value.toLowerCase() } })) } />\r\n\r\n                <TextField\r\n                  id=\"apiHost\"\r\n                  label=\"Host\"\r\n                  value={ apiConfig.host }\r\n                  onChange={ this.handleInputChange((state, value) => ({ apiConfig: { ...state.apiConfig, host: value.toLowerCase() } })) } />\r\n\r\n                <TextField\r\n                  id=\"apiPort\"\r\n                  label=\"Port\"\r\n                  value={ apiConfig.port }\r\n                  onChange={ this.handleInputChange((state, value) => ({ apiConfig: { ...state.apiConfig, port: value } })) } />\r\n              </form>\r\n            </ListItem>\r\n          </List>\r\n        </main>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  handleInputChange = (func) => (event) => {\r\n    const { value } = event.target;\r\n\r\n    this.setState((state) => func(state, value));\r\n  };\r\n\r\n  handleBack = () => {\r\n    this.props.history.push('/');\r\n  };\r\n}\r\n","import { connect } from 'react-redux';\r\nimport actions from '../../actions';\r\nimport Settings from './Settings';\r\n\r\nexport default connect((state) => ({\r\n  configs: state.configs,\r\n}), {\r\n  updateConfigs: actions.configs.update,\r\n})(Settings);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { ChevronLeft } from '@material-ui/icons';\r\nimport {\r\n  Divider,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListSubheader,\r\n  TextField,\r\n} from '@material-ui/core';\r\n\r\nimport shared from '../../shared';\r\nimport { Title } from '../../components';\r\nimport './Stories.css';\r\n\r\nexport default class Stories extends React.Component {\r\n  static propTypes = {\r\n    history: PropTypes.object.isRequired,\r\n    api: PropTypes.object.isRequired,\r\n  };\r\n\r\n  constructor({ api }) {\r\n    super();\r\n\r\n    this.state = {\r\n      stories: [],\r\n      points: undefined,\r\n      config: api,\r\n    };\r\n\r\n    this.getStories(undefined);\r\n  }\r\n\r\n  async getStories(points) {\r\n    const data = await shared.api.stories.getByProject(process.env.REACT_APP_DEFAULTS_PROJECT, { points }, this.state.config);\r\n\r\n    if (data) {\r\n      this.setState({ stories: data.data });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { stories, points } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Title\r\n          label=\"Stories\"\r\n          icon={ <ChevronLeft /> }\r\n          onClick={ this.handleBack } />\r\n\r\n        <main className=\"stories-list\">\r\n          <List subheader={ <ListSubheader>Search</ListSubheader> }>\r\n            <ListItem className=\"settings-form\">\r\n              <TextField\r\n                id=\"points\"\r\n                label=\"By points\"\r\n                type=\"number\"\r\n                value={ points }\r\n                onBlur={ this.handlePointsBlur() }\r\n                onChange={ this.handlePointsChange() } />\r\n            </ListItem>\r\n          </List>\r\n\r\n          <Divider />\r\n\r\n          <List>\r\n            {\r\n              stories.map((story) => (\r\n                <ListItem key={ story.id }>\r\n                  <ListItemText\r\n                    primary={ `${story.id} (${story.points})` }\r\n                    secondary={ story.title } />\r\n                </ListItem>\r\n              ))\r\n            }\r\n          </List>\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  handlePointsBlur = () => (event) => {\r\n    const { value } = event.target;\r\n\r\n    this.getStories(value);\r\n  };\r\n\r\n  handlePointsChange = () => (event) => {\r\n    const { value } = event.target;\r\n\r\n    this.setState({ points: value });\r\n  };\r\n\r\n  handleBack = () => {\r\n    this.props.history.push('/');\r\n  };\r\n}\r\n","import { connect } from 'react-redux';\r\nimport Stories from './Stories';\r\n\r\nexport default connect((state) => ({\r\n  api: state.configs.api.config,\r\n}), {})(Stories);\r\n","import React from 'react';\r\nimport { HashRouter, Route } from 'react-router-dom';\r\n\r\nimport { About, Home, Login, Preview, Settings, Stories } from './containers';\r\n\r\nconst Router = () => (\r\n  <HashRouter>\r\n    <div className=\"panel\">\r\n      <Route exact path=\"/\" component={ Home } />\r\n      <Route path=\"/cards/:card\" component={ Preview } />\r\n      <Route path=\"/about\" component={ About } />\r\n      <Route path=\"/login\" component={ Login } />\r\n      <Route path=\"/settings\" component={ Settings } />\r\n      <Route path=\"/stories\" component={ Stories } />\r\n    </div>\r\n  </HashRouter>\r\n);\r\n\r\nexport default Router;\r\n","import React from 'react';\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\nimport { blueGrey } from '@material-ui/core/colors';\r\n\r\nimport Router from './Router';\r\nimport './App.css';\r\nimport 'normalize.css';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    type: 'light',\r\n    primary: {\r\n      light: blueGrey[200],\r\n      main: blueGrey[400],\r\n      dark: blueGrey[600],\r\n    },\r\n  },\r\n  typography: {\r\n    useNextVariants: true,\r\n  },\r\n});\r\n\r\nconst App = (props) => (\r\n  <MuiThemeProvider theme={ theme }>\r\n    <Router { ...props } />\r\n  </MuiThemeProvider>\r\n);\r\n\r\nexport default App;\r\n","import localforage from 'localforage';\r\n\r\nimport shared from './shared';\r\n\r\nconst errorStore = localforage.createInstance({\r\n  ...shared.constants.app.db,\r\n  storeName: 'error',\r\n});\r\n\r\nexport default async (message, source, lineno, colno, error) => {\r\n  const key = Date.now().toString();\r\n  const log = {\r\n    message,\r\n    source,\r\n    lineno,\r\n    colno,\r\n    error: {\r\n      message: error.message,\r\n      stack: error.stack,\r\n    },\r\n  };\r\n\r\n  await errorStore.setItem(key, log);\r\n  await shared.api.errors.create(log);\r\n\r\n  return !process.env.REACT_APP_DEBUG;\r\n};\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then((registration) => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport actions from './actions';\r\nimport shared from './shared';\r\nimport App from './App';\r\nimport errorHandler from './error-handler';\r\nimport registerServiceWorker from './registerServiceWorker';\r\nimport configureStore from './store';\r\n\r\nwindow.onerror = errorHandler;\r\nconst store = configureStore();\r\n\r\ninit();\r\n\r\nrender(\r\n  <Provider store={ store }>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\nif (process.env.NODE_ENV !== 'production') {\r\n  const showDevTools = require('./showDevTools').default;\r\n\r\n  showDevTools(store);\r\n}\r\n\r\nregisterServiceWorker();\r\n\r\nasync function init() {\r\n  const decks = await shared.api.decks.getAll();\r\n  const api = await shared.api.configs.getByName('api');\r\n  const stories = await shared.api.configs.getByName('stories');\r\n  const online = await shared.api.configs.getByName('online');\r\n\r\n  store.dispatch(actions.decks.update(decks));\r\n  store.dispatch(actions.configs.update({ api, stories, online }));\r\n\r\n  shared.socket.setup(store);\r\n}\r\n","export const CONFIG = 'CONFIG';\r\nexport const DECKS = 'DECKS';\r\nexport const ME = 'ME';\r\nexport const MESSAGE = 'MESSAGE';\r\nexport const INTERNET = 'INTERNET';\r\nexport const PLAYERS = 'PLAYERS';\r\nexport const SOCKET = 'SOCKET';\r\n\r\nexport default {\r\n  CONFIG,\r\n  DECKS,\r\n  ME,\r\n  MESSAGE,\r\n  INTERNET,\r\n  PLAYERS,\r\n  SOCKET,\r\n};\r\n"],"sourceRoot":""}