{"version":3,"sources":["store/index.js","reducers/initial-state.js","reducers/index.js","reducers/configs.js","reducers/decks.js","reducers/me.js","reducers/message.js","reducers/internet.js","reducers/players.js","reducers/socket.js","store/prod.js","shared/constants.js","shared/api/configs/index.js","shared/api/configs/create.js","shared/api/configs/get-by-name.js","shared/api/decks/index.js","shared/api/decks/get-all.js","shared/api/index.js","shared/api/errors/index.js","shared/api/errors/create.js","shared/api/stories/index.js","shared/api/stories/get-by-project.js","shared/socket/setup.js","shared/index.js","shared/socket/index.js","actions/message/index.js","actions/message/send.js","actions/players/index.js","actions/players/update.js","actions/index.js","actions/configs/index.js","actions/configs/update.js","actions/decks/index.js","actions/decks/update.js","actions/me/index.js","actions/me/connect.js","actions/me/disconnect.js","actions/me/reconnect.js","actions/me/update.js","components/Card/Back/Back.js","components/Card/Front/Front.js","components/Card/Card.js","components/Cards/Cards.js","components/Fab/Fab.js","components/Lobby/Lobby.js","components/Message/Message.js","components/Player/Player.js","components/Players/Players.js","components/TextBox/TextBox.js","components/Title/Title.js","containers/About/About.js","selectors/cards/get-by-deck.js","selectors/index.js","selectors/cards/index.js","selectors/players/index.js","selectors/players/get-others.js","selectors/players/revealed-cards.js","containers/Home/Head/MenuItem.js","containers/Home/Head/Menu.js","containers/Home/Head/Head.js","containers/Home/Home.js","containers/Home/index.js","containers/Login/Login.js","containers/Login/index.js","containers/Preview/Preview.js","containers/Preview/index.js","containers/Settings/Settings.js","containers/Settings/index.js","containers/Stories/Stories.js","containers/Stories/index.js","Router.js","App.js","error-handler.js","registerServiceWorker.js","index.js","actions/action-types.js"],"names":["module","exports","require","configs","stories","name","config","team","online","room","api","protocol","host","port","decks","List","internet","connected","me","id","card","message","text","type","players","socket","emit","combineReducers","state","initialState","action","types","CONFIG","DECKS","ME","MESSAGE","INTERNET","PLAYERS","SOCKET","enhancer","compose","reduxBatch","applyMiddleware","thunk","createStore","rootReducer","app","db","version","description","error","success","warning","urlEscape","configStore","localforage","createInstance","storeName","store","create","setItem","getByName","a","getItem","undefined","getAll","Promise","resolve","cards","errors","axios","post","getByProject","project","opt","url","get","params","events","joined","left","chosen","revealed","cleared","constants","setup","dispatch","actions","send","shared","getState","openSocket","on","connect","reconnect","disconnect","data","update","users","Object","values","filter","user","Back","className","Front","dangerouslySetInnerHTML","__html","Card","props","Cards","map","key","to","title","withStyles","theme","fab","position","bottom","spacing","right","color","palette","common","white","classes","children","style","Fab","classnames","variant","Lobby","player","Message","Player","Players","TextBox","TextField","Title","icon","label","onClick","AppBar","Toolbar","IconButton","Typography","noWrap","About","React","Component","render","ChevronLeft","this","handleBack","src","process","width","height","alt","handleChoose","Public","history","push","event","preventDefault","window","open","getByDeck","deck","reduce","prev","curr","concat","getOthers","excludeId","revealedCards","playersRevealed","forEach","every","playerRevealed","MenuItem","ListItem","component","Link","ListItemIcon","ListItemText","primary","paper","Hidden","mdUp","Drawer","ModalProps","keepMounted","onClose","InfoOutlined","SettingsApplications","Head","Menu","handleClick","setState","Home","badge","disabled","Cloud","selectors","Login","constructor","super","autoComplete","onSubmit","handleSubmit","value","onChange","handleInputChange","required","inputProps","maxLength","Send","target","toLowerCase","Preview","componentDidMount","match","aria-label","backHandleClick","cardHandleClick","role","sendMessage","size","Settigs","apiConfig","onlineConfig","subheader","ListSubheader","Divider","func","storiesConfig","componentWillUnmount","updateConfigs","Settings","Stories","handlePointsBlur","getStories","handlePointsChange","points","onBlur","story","secondary","Router","exact","path","createMuiTheme","light","blueGrey","main","dark","typography","useNextVariants","App","errorStore","source","lineno","colno","Date","now","toString","log","stack","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","catch","onerror","errorHandler","configureStore","init","document","getElementById","URL","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.e0778485.chunk.js","sourcesContent":["if (process.env.NODE_ENV === 'production') {\r\n  module.exports = require('./prod');\r\n} else {\r\n  module.exports = require('./dev');\r\n}\r\n","import { List } from 'immutable';\r\n\r\nexport default {\r\n  configs: {\r\n    stories: {\r\n      name: 'stories',\r\n      config: {\r\n        team: '',\r\n      },\r\n    },\r\n    online: {\r\n      name: 'online',\r\n      config: {\r\n        room: '',\r\n        name: '',\r\n      },\r\n    },\r\n    api: {\r\n      name: 'api',\r\n      config: {\r\n        protocol: 'https',\r\n        host: 'planning-poker-api.herokuapp.com',\r\n        port: '443',\r\n      },\r\n    },\r\n  },\r\n  decks: new List(),\r\n  internet: {\r\n    connected: false,\r\n  },\r\n  me: {\r\n    id: '',\r\n    name: '',\r\n    card: '',\r\n    room: '',\r\n  },\r\n  message: {\r\n    text: '',\r\n    type: '',\r\n  },\r\n  players: new List(),\r\n  socket: {\r\n    emit: () => {},\r\n  },\r\n};\r\n","import { combineReducers } from 'redux';\r\n\r\nimport configs from './configs';\r\nimport decks from './decks';\r\nimport me from './me';\r\nimport message from './message';\r\nimport internet from './internet';\r\nimport players from './players';\r\nimport socket from './socket';\r\n\r\nexport { default as initialState } from './initial-state';\r\n\r\nexport default combineReducers({\r\n  configs,\r\n  decks,\r\n  me,\r\n  message,\r\n  internet,\r\n  players,\r\n  socket,\r\n});\r\n","import initialState from './initial-state';\r\nimport types from '../actions/action-types';\r\n\r\nexport default (state = initialState.configs, action) => {\r\n  switch (action.type) {\r\n    case types.CONFIG:\r\n      return action.configs;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import initialState from './initial-state';\r\nimport types from '../actions/action-types';\r\n\r\nexport default (state = initialState.decks, action) => {\r\n  switch (action.type) {\r\n    case types.DECKS:\r\n      return action.decks;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import initialState from './initial-state';\r\nimport types from '../actions/action-types';\r\n\r\nexport default (state = initialState.me, action) => {\r\n  switch (action.type) {\r\n    case types.ME:\r\n      return action.me;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import initialState from './initial-state';\r\nimport types from '../actions/action-types';\r\n\r\nexport default (state = initialState.message, action) => {\r\n  switch (action.type) {\r\n    case types.MESSAGE:\r\n      return action.message;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import initialState from './initial-state';\r\nimport types from '../actions/action-types';\r\n\r\nexport default (state = initialState.internet, action) => {\r\n  switch (action.type) {\r\n    case types.INTERNET:\r\n      return action.internet;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import initialState from './initial-state';\r\nimport types from '../actions/action-types';\r\n\r\nexport default (state = initialState.players, action) => {\r\n  switch (action.type) {\r\n    case types.PLAYERS:\r\n      return action.players;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import initialState from './initial-state';\r\nimport types from '../actions/action-types';\r\n\r\nexport default (state = initialState.socket, action) => {\r\n  switch (action.type) {\r\n    case types.SOCKET:\r\n      return action.socket;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { createStore, compose, applyMiddleware } from 'redux';\r\nimport { reduxBatch } from '@manaflair/redux-batch';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport rootReducer from '../reducers';\r\n\r\nconst enhancer = compose(\r\n  reduxBatch,\r\n  applyMiddleware(thunk),\r\n);\r\n\r\nexport default (initialState) => {\r\n  const store = createStore(rootReducer, initialState, enhancer);\r\n\r\n  if (module.hot) {\r\n    module.hot.accept('../reducers', () => store.replaceReducer(require('../reducers')));\r\n  }\r\n\r\n  return store;\r\n};\r\n","export const app = {\r\n  db: {\r\n    name: 'planning-poker',\r\n    version: 1.0,\r\n    description: 'planning poker store',\r\n  },\r\n};\r\n\r\nexport const message = {\r\n  types: {\r\n    error: 'error',\r\n    success: 'success',\r\n    warning: 'warning',\r\n  },\r\n};\r\n\r\nexport const urlEscape = {\r\n  '&#9749;': '%E2%98%95',\r\n};\r\n\r\nexport default {\r\n  app,\r\n  message,\r\n  urlEscape,\r\n};\r\n","import localforage from 'localforage';\r\n\r\nimport { app } from '../../../shared/constants';\r\nimport create from './create';\r\nimport getByName from './get-by-name';\r\n\r\nconst configStore = localforage.createInstance({\r\n  ...app.db,\r\n  storeName: 'config',\r\n});\r\n\r\nexport default {\r\n  create: create(configStore),\r\n  getByName: getByName(configStore),\r\n};\r\n","export default (store) => (config) => store.setItem(config.name, config);\r\n","export default (store) => async (name) => await store.getItem(name) || undefined;\r\n","import getAll from './get-all';\r\n\r\nexport default {\r\n  getAll,\r\n};\r\n","import { List } from 'immutable';\r\n\r\nexport default () => new Promise((resolve) => resolve(new List([\r\n  {\r\n    name: 'fibonacci',\r\n    cards: new List(['0', '1', '2', '3', '5', '8', '13', '20', '40', '&infin;', '&quest;', '&#9749;']),\r\n  },\r\n])));\r\n","import configs from './configs';\r\nimport decks from './decks';\r\nimport errors from './errors';\r\nimport stories from './stories';\r\n\r\nexport default {\r\n  configs,\r\n  decks,\r\n  errors,\r\n  stories,\r\n};\r\n","import create from './create';\r\n\r\nexport default {\r\n  create,\r\n};\r\n","import axios from 'axios';\r\n\r\nexport default (error, config) => {\r\n  if (!config) {\r\n    return;\r\n  }\r\n\r\n  return axios.post(`${config.protocol}://${config.host}:${config.port}/errors`, error);\r\n};\r\n","import getByProject from './get-by-project';\r\n\r\nexport default {\r\n  getByProject,\r\n};\r\n","import axios from 'axios';\r\n\r\nexport default (project, opt, config) => {\r\n  const url = `${config.protocol}://${config.host}:${config.port}/projects/${project}/stories`;\r\n\r\n  return axios.get(url, {\r\n    params: opt,\r\n  });\r\n};\r\n","import openSocket from 'socket.io-client';\r\n\r\nimport shared from '..';\r\nimport actions from '../../actions';\r\n\r\nconst events = {\r\n  joined: 'joined',\r\n  chosen: 'chosen',\r\n  revealed: 'revealed',\r\n  user: {\r\n    joined: 'user:joined',\r\n    left: 'user:left',\r\n  },\r\n  card: {\r\n    chosen: 'card:chosen',\r\n    revealed: 'card:revealed',\r\n    cleared: 'card:cleared',\r\n  },\r\n  connect: 'connect',\r\n  reconnecting: 'reconnecting',\r\n  reconnectFailed: 'reconnect_failed',\r\n};\r\n\r\nexport default (store) => {\r\n  store.dispatch(actions.message.send({ text: 'connecting...', type: shared.constants.message.types.warning }));\r\n\r\n  const { config: { protocol, host, port } } = store.getState().configs.api;\r\n  const socket = openSocket(`${protocol}://${host}:${port}`);\r\n\r\n  socket.on(events.connect, () => store.dispatch(actions.me.connect(socket, store.getState().me)));\r\n  socket.on(events.reconnecting, () => store.dispatch(actions.me.reconnect()));\r\n  socket.on(events.reconnectFailed, () => store.dispatch(actions.me.disconnect()));\r\n\r\n  socket.on(events.joined, (data) => store.dispatch(actions.me.update(data)));\r\n  socket.on(events.revealed, (data) => store.dispatch(actions.me.update(data)));\r\n\r\n  socket.on(events.user.joined, (data) => store.dispatch(actions.players.update(data)));\r\n  socket.on(events.user.left, (data) => store.dispatch(actions.players.update(data)));\r\n  socket.on(events.card.revealed, (data) => store.dispatch(actions.players.update(data)));\r\n  socket.on(events.card.cleared, (data) => store.dispatch(actions.players.update(data)));\r\n};\r\n","import api from './api';\r\nimport constants from './constants';\r\nimport socket from './socket';\r\n\r\nexport default {\r\n  api,\r\n  constants,\r\n  socket,\r\n};\r\n","import setup from './setup';\r\n\r\nexport default {\r\n  setup,\r\n};\r\n","import send from './send';\r\n\r\nexport default {\r\n  send,\r\n};\r\n","import { initialState } from '../../reducers';\r\nimport types from '../action-types';\r\n\r\nexport default (message = initialState.message) => ({\r\n  type: types.MESSAGE,\r\n  message,\r\n});\r\n","import update from './update';\r\n\r\nexport default {\r\n  update,\r\n};\r\n","import { List } from 'immutable';\r\n\r\nimport { initialState } from '../../reducers';\r\nimport types from '../action-types';\r\n\r\nexport default (data = { users: initialState.players }) => ({\r\n  type: types.PLAYERS,\r\n  players: new List(Object.values(data.users).filter((user) => user && user.id && typeof user !== 'function')),\r\n});\r\n","import configs from './configs';\r\nimport decks from './decks';\r\nimport me from './me';\r\nimport message from './message';\r\nimport players from './players';\r\nimport types from './action-types';\r\n\r\nexport default {\r\n  configs,\r\n  decks,\r\n  me,\r\n  message,\r\n  players,\r\n  types,\r\n};\r\n","import update from './update';\r\n\r\nexport default {\r\n  update,\r\n};\r\n","import { initialState } from '../../reducers';\r\nimport types from '../action-types';\r\nimport shared from '../../shared';\r\n\r\nexport default ({\r\n  api = initialState.configs.api,\r\n  online = initialState.configs.online,\r\n  stories = initialState.configs.stories,\r\n}) => {\r\n  shared.api.configs.create(api);\r\n  shared.api.configs.create(online);\r\n  shared.api.configs.create(stories);\r\n\r\n  return {\r\n    type: types.CONFIG,\r\n    configs: {\r\n      api,\r\n      online,\r\n      stories,\r\n    },\r\n  };\r\n};\r\n","import update from './update';\r\n\r\nexport default {\r\n  update,\r\n};\r\n","import { List } from 'immutable';\r\n\r\nimport { initialState } from '../../reducers';\r\nimport types from '../action-types';\r\n\r\nexport default (decks = initialState.decks) => ({\r\n  type: types.DECKS,\r\n  decks: new List(decks),\r\n});\r\n","import connect from './connect';\r\nimport disconnect from './disconnect';\r\nimport reconnect from './reconnect';\r\nimport update from './update';\r\n\r\nexport default {\r\n  connect,\r\n  disconnect,\r\n  reconnect,\r\n  update,\r\n};\r\n","import message from '../message';\r\nimport types from '../action-types';\r\n\r\nexport default (socket, { name, room }) => {\r\n  if (room) {\r\n    socket.emit('join', { name, room });\r\n  }\r\n\r\n  return [\r\n    {\r\n      type: types.SOCKET,\r\n      socket,\r\n    },\r\n    message.send(),\r\n    {\r\n      type: types.INTERNET,\r\n      internet: {\r\n        connected: true,\r\n      },\r\n    },\r\n  ];\r\n};\r\n","import { initialState } from '../../reducers';\r\nimport shared from '../../shared';\r\nimport message from '../message';\r\nimport types from '../action-types';\r\n\r\nexport default () => ([\r\n  message.send({ text: 'disconnected', type: shared.constants.message.types.error }),\r\n  {\r\n    type: types.INTERNET,\r\n    internet: initialState.internet,\r\n  },\r\n  {\r\n    type: types.SOCKET,\r\n    socket: initialState.socket,\r\n  },\r\n]);\r\n","import { initialState } from '../../reducers';\r\nimport shared from '../../shared';\r\nimport message from '../message';\r\nimport players from '../players';\r\nimport types from '../action-types';\r\n\r\nexport default () => ([\r\n  message.send({ text: 'reconnecting...', type: shared.constants.message.types.warning }),\r\n  players.update(),\r\n  {\r\n    type: types.INTERNET,\r\n    internet: initialState.internet,\r\n  },\r\n]);\r\n","import players from '../players';\r\nimport types from '../action-types';\r\n\r\nexport default (data) => ([\r\n  players.update(data),\r\n  {\r\n    type: types.ME,\r\n    me: {\r\n      id: data.user.id,\r\n      name: data.user.name,\r\n      card: data.card || '',\r\n      room: data.room,\r\n    },\r\n  },\r\n]);\r\n","import React from 'react';\r\n\r\nimport './Back.css';\r\n\r\nconst Back = () => (\r\n  <div className=\"card-back\">\r\n    <div className=\"card-back__content\">\r\n      <h1 className=\"card-back__title\">PLANNING</h1>\r\n      <h2 className=\"card-back__subtitle\">\r\n        <sup className=\"card-back__title-mark\">SCRUM</sup>POKER\r\n      </h2>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Back;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Front.css';\r\n\r\nconst Front = ({ card }) => (\r\n  <div className=\"card\">\r\n    <div className=\"card__mark\">\r\n      <span dangerouslySetInnerHTML={ { __html: card } } />\r\n    </div>\r\n\r\n    <div className=\"card__points\">\r\n      <span dangerouslySetInnerHTML={ { __html: card } } />\r\n    </div>\r\n\r\n    <div className=\"card__mark-upside-down\">\r\n      <span dangerouslySetInnerHTML={ { __html: card } } />\r\n    </div>\r\n  </div>\r\n);\r\n\r\nFront.propTypes = {\r\n  card: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Front;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Back from './Back';\r\nimport Front from './Front';\r\n\r\nconst Card = (props) => props.card ? <Front { ...props } /> : <Back />;\r\n\r\nCard.propTypes = {\r\n  card: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport shared from '../../shared';\r\nimport { Card } from '..';\r\nimport './Cards.css';\r\n\r\nconst Cards = ({ cards }) => (\r\n  <ul className=\"cards\">\r\n    {\r\n      cards.map((card) => (\r\n        <li className=\"cards__card\" key={ card }>\r\n          <Link to={ `/cards/${shared.constants.urlEscape[card] || card}` } title={ `Card ${card}` }>\r\n            <Card card={ card } />\r\n          </Link>\r\n        </li>\r\n      ))\r\n    }\r\n  </ul>\r\n);\r\n\r\nCards.propTypes = {\r\n  cards: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Cards;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\nimport { Fab } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = (theme) => ({\r\n  fab: {\r\n    position: 'absolute',\r\n    bottom: theme.spacing(1) * 2,\r\n    right: theme.spacing(1) * 2,\r\n    color: theme.palette.common.white,\r\n  },\r\n});\r\n\r\nconst FabCustom = ({ classes, children, style, ...config }) => (\r\n  <Fab\r\n    className={ classnames(classes.fab, style) }\r\n    variant=\"round\"\r\n    { ...config }>\r\n    { children }\r\n  </Fab>\r\n);\r\n\r\nFabCustom.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  children: PropTypes.element.isRequired,\r\n  style: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(FabCustom);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Lobby.css';\r\n\r\nconst Lobby = ({ players }) => (\r\n  <ul className=\"lobby\">\r\n    {\r\n      players.map((player) => (\r\n        <li className=\"lobby__player\" key={ player.id }>\r\n          <div className=\"lobby__player-content\">\r\n            <span className=\"lobby__player-name\">{ player.name }</span>\r\n          </div>\r\n        </li>\r\n      ))\r\n    }\r\n  </ul>\r\n);\r\n\r\nLobby.propTypes = {\r\n  players: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Lobby;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\nimport shared from '../../shared';\r\nimport './Message.css';\r\n\r\nconst Message = ({ message }) => (\r\n  <div\r\n    className={ classnames(\r\n      'message',\r\n      { 'message--state-warning': message.type === shared.constants.message.types.warning },\r\n      { 'message--state-error': message.type === shared.constants.message.types.error },\r\n      { 'message--state-success': message.type === shared.constants.message.types.success },\r\n    ) }>\r\n    { message.text }\r\n  </div>\r\n);\r\n\r\nMessage.propTypes = {\r\n  message: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Message;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\nimport './Player.css';\r\n\r\nconst Player = ({ me, player }) => (\r\n  <div\r\n    className={ classnames(\r\n      'players__player',\r\n      { 'players__player--points-equal': player.card && player.card === me.card },\r\n      { 'players__player--points-different': player.card && player.card !== me.card },\r\n    ) }>\r\n    <div className=\"players__player-mark\">\r\n      <span dangerouslySetInnerHTML={ { __html: player.card } } />\r\n    </div>\r\n\r\n    <div className=\"players__player-content\">\r\n      { player.name }\r\n    </div>\r\n  </div>\r\n);\r\n\r\nPlayer.propTypes = {\r\n  me: PropTypes.object.isRequired,\r\n  player: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Player;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Player } from '..';\r\nimport './Players.css';\r\n\r\nconst Players = ({ me, players }) => (\r\n  <ul className=\"players\">\r\n    {\r\n      players.map((player) => (\r\n        <li key={ player.id }>\r\n          <Player me={ me } player={ player } />\r\n        </li>\r\n      ))\r\n    }\r\n  </ul>\r\n);\r\n\r\nPlayers.propTypes = {\r\n  me: PropTypes.object.isRequired,\r\n  players: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Players;\r\n","import React from 'react';\r\nimport { TextField } from '@material-ui/core';\r\n\r\nconst TextBox = (props) => (\r\n  <TextField { ...props } />\r\n);\r\n\r\nexport default TextBox;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { AppBar, Toolbar, Typography, IconButton } from '@material-ui/core';\r\n\r\nconst Title = ({ icon, label, onClick }) => (\r\n  <AppBar>\r\n    <Toolbar>\r\n      <IconButton color=\"inherit\" onClick={ onClick }>\r\n        { icon }\r\n      </IconButton>\r\n      <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n        { label }\r\n      </Typography>\r\n    </Toolbar>\r\n  </AppBar>\r\n);\r\n\r\nTitle.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n  icon: PropTypes.element.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Title;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { ChevronLeft, Public } from '@material-ui/icons';\r\n\r\nimport { Title } from '../../components';\r\nimport './About.css';\r\n\r\nexport default class About extends React.Component {\r\n  static propTypes = {\r\n    history: PropTypes.object.isRequired,\r\n  };\r\n\r\n  render = () => (\r\n    <div>\r\n      <Title\r\n        label=\"About\"\r\n        icon={ <ChevronLeft /> }\r\n        onClick={ this.handleBack } />\r\n      <main className=\"about-list\">\r\n        <div className=\"about-list__item\">\r\n          <div className=\"about__logo-image\">\r\n            <img src={process.env.PUBLIC_URL + '/img/logo.png'} width=\"96\" height=\"96\" alt=\"Logo\" />\r\n          </div>\r\n\r\n          <div className=\"about__product-name\">\r\n            { process.env.REACT_APP_NAME }\r\n          </div>\r\n\r\n          <span>\r\n            { process.env.REACT_APP_DESCRIPTION }\r\n          </span>\r\n        </div>\r\n\r\n        <div className=\"about-list__item\">\r\n          <h2 className=\"about__product-version\">\r\n            Version\r\n            <p>{ process.env.REACT_APP_VERSION }</p>\r\n          </h2>\r\n        </div>\r\n\r\n        <div className=\"about-list__item\">\r\n          <button\r\n            className=\"about__form-button\"\r\n            onClick={ this.handleChoose }>\r\n            <i className=\"about__form-icon\">\r\n              <Public />\r\n            </i>\r\n          </button>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n\r\n  handleBack = () => {\r\n    this.props.history.push('/');\r\n  };\r\n\r\n  handleChoose = (event) => {\r\n    event.preventDefault();\r\n    window.open('https://github.com/jroliveira/planning-poker-game', '_system', 'location=yes');\r\n  };\r\n}\r\n","import { List } from 'immutable';\r\n\r\nexport default (decks, name) => decks\r\n  .filter((deck) => deck.name === name)\r\n  .map((deck) => deck.cards)\r\n  .reduce((prev, curr) => prev.concat(curr)) || new List();\r\n","import cards from './cards';\r\nimport decks from './decks';\r\nimport players from './players';\r\nimport stories from './stories';\r\n\r\nexport default {\r\n  cards,\r\n  decks,\r\n  players,\r\n  stories,\r\n};\r\n","import getByDeck from './get-by-deck';\r\n\r\nexport default {\r\n  getByDeck,\r\n};\r\n","import getOthers from './get-others';\r\nimport revealedCards from './revealed-cards';\r\n\r\nexport default {\r\n  getOthers,\r\n  revealedCards,\r\n};\r\n","export default (players, excludeId) => players.filter((player) => player.id !== excludeId);\r\n","export default (players, playersRevealed) => players\r\n  .filter(player => player.card)\r\n  .forEach(player => {\r\n    if (playersRevealed.every((playerRevealed) => playerRevealed.id !== player.id))\r\n    {\r\n      playersRevealed.push(player);\r\n    }\r\n  });;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { ListItem, ListItemIcon, ListItemText } from '@material-ui/core';\r\n\r\nconst MenuItem = ({ children, label, to }) => (\r\n  <ListItem\r\n    component={ Link }\r\n    to={ to }\r\n    title={ label }>\r\n    <ListItemIcon>\r\n      { children }\r\n    </ListItemIcon>\r\n    <ListItemText primary={ label } />\r\n  </ListItem>\r\n);\r\n\r\nMenuItem.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  to: PropTypes.string.isRequired,\r\n  children: PropTypes.element.isRequired,\r\n};\r\n\r\nexport default MenuItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Drawer, Hidden, IconButton, List } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { ChevronLeft, InfoOutlined, SettingsApplications } from '@material-ui/icons';\r\n\r\nimport MenuItem from './MenuItem';\r\nimport './Menu.css';\r\n\r\nconst styles = () => ({\r\n  paper: {\r\n    width: 270,\r\n  },\r\n});\r\n\r\nconst Menu = (props) => (\r\n  <Hidden mdUp>\r\n    <Drawer\r\n      { ...props }\r\n      className=\"menu\"\r\n      variant=\"persistent\"\r\n      ModalProps={ { keepMounted: true } }>\r\n      <div className=\"menu__header\">\r\n        <div className=\"menu__button-back\">\r\n          <IconButton onClick={ props.onClose }>\r\n            { <ChevronLeft /> }\r\n          </IconButton>\r\n        </div>\r\n\r\n        <img\r\n          className=\"menu__logo-image\"\r\n          src={process.env.PUBLIC_URL + '/img/logo.png'}\r\n          height=\"65\"\r\n          width=\"65\"\r\n          alt=\"Logo\" />\r\n\r\n        <div className=\"menu__title\">\r\n          { process.env.REACT_APP_NAME }\r\n        </div>\r\n      </div>\r\n\r\n      <List>\r\n        <MenuItem label=\"About\" to=\"/about\">\r\n          <InfoOutlined />\r\n        </MenuItem>\r\n        <MenuItem label=\"Settings\" to=\"/settings\">\r\n          <SettingsApplications />\r\n        </MenuItem>\r\n      </List>\r\n    </Drawer>\r\n  </Hidden>\r\n);\r\n\r\nMenu.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Menu);\r\n","import React from 'react';\r\nimport { Menu as MenuIcon } from '@material-ui/icons';\r\n\r\nimport { Title } from '../../../components';\r\nimport Menu from './Menu';\r\n\r\nexport default class Head extends React.Component {\r\n  state = {\r\n    open: false,\r\n  };\r\n\r\n  render = () => (\r\n    <div>\r\n      <Title\r\n        label={ process.env.REACT_APP_NAME }\r\n        icon={ <MenuIcon /> }\r\n        onClick={ this.handleClick } />\r\n\r\n      <Menu\r\n        onClose={ this.handleClick }\r\n        open={ this.state.open } />\r\n    </div>\r\n  );\r\n\r\n  handleClick = () => {\r\n    this.setState({ open: !this.state.open });\r\n  };\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport classnames from 'classnames';\r\nimport { Cloud } from '@material-ui/icons';\r\n\r\nimport { Cards, Fab, Lobby, Message } from '../../components';\r\nimport Head from './Head';\r\nimport './Home.css';\r\n\r\nconst Home = ({ cards, me, message, players, internet }) => (\r\n  <div>\r\n    <Head />\r\n    <main className=\"home\">\r\n      <Message message={ message } />\r\n      <Lobby players={ players } />\r\n      <Cards cards={ cards } />\r\n\r\n      <Fab\r\n        badge={ 2 }\r\n        color=\"inherit\"\r\n        component={ Link }\r\n        title=\"Login\"\r\n        to=\"/login\"\r\n        disabled={ !internet.connected }\r\n        style={ classnames(\r\n          { 'login-button--logged-out': me.id === '' && internet.connected },\r\n          { 'login-button--logged-in': me.id !== '' && internet.connected },\r\n          { 'login-button--disconnected': !internet.connected }\r\n        ) }>\r\n        <Cloud />\r\n      </Fab>\r\n    </main>\r\n  </div>\r\n);\r\n\r\nHome.propTypes = {\r\n  cards: PropTypes.object.isRequired,\r\n  internet: PropTypes.object.isRequired,\r\n  me: PropTypes.object.isRequired,\r\n  message: PropTypes.object.isRequired,\r\n  players: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Home;\r\n","import { connect } from 'react-redux';\r\n\r\nimport selectors from '../../selectors';\r\nimport Home from './Home';\r\n\r\nexport default connect((state) => ({\r\n  cards: selectors.cards.getByDeck(state.decks, process.env.REACT_APP_DEFAULTS_DECK),\r\n  internet: state.internet,\r\n  me: state.me,\r\n  message: state.message,\r\n  players: selectors.players.getOthers(state.players, state.me.id),\r\n}), {})(Home);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\nimport { ChevronLeft, Send } from '@material-ui/icons';\r\n\r\nimport { Fab, TextBox, Title } from '../../components';\r\nimport './Login.css';\r\n\r\nexport default class Login extends React.Component {\r\n  static propTypes = {\r\n    history: PropTypes.object.isRequired,\r\n    socket: PropTypes.object.isRequired,\r\n    online: PropTypes.object.isRequired,\r\n  };\r\n\r\n  constructor({ online }) {\r\n    super();\r\n\r\n    this.state = {\r\n      name: online.name,\r\n      room: online.room,\r\n    };\r\n  }\r\n\r\n  render = () => {\r\n    const { name, room } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Title\r\n          label=\"Login\"\r\n          icon={ <ChevronLeft /> }\r\n          onClick={ this.handleBack } />\r\n        <form className=\"login-form\" autoComplete=\"off\" onSubmit={ this.handleSubmit }>\r\n          <TextBox\r\n            name=\"room\"\r\n            label=\"Room\"\r\n            value={ room }\r\n            onChange={ this.handleInputChange }\r\n            required />\r\n\r\n          <TextBox\r\n            name=\"name\"\r\n            label=\"Name\"\r\n            value={ name }\r\n            onChange={ this.handleInputChange }\r\n            inputProps={ {\r\n              maxLength: '2',\r\n            } }\r\n            required />\r\n\r\n          <Fab\r\n            type=\"submit\"\r\n            color=\"primary\"\r\n            style={ classnames('login-button') }>\r\n            <Send />\r\n          </Fab>\r\n        </form>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    this.setState({ [name]: value.toLowerCase() });\r\n  };\r\n\r\n  handleBack = () => {\r\n    this.props.history.push('/');\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const { name, room } = this.state;\r\n\r\n    this.props.socket.emit('join', { name, room });\r\n    this.handleBack();\r\n  };\r\n}\r\n","import { connect } from 'react-redux';\r\n\r\nimport Login from './Login';\r\n\r\nexport default connect((state) => ({\r\n  message: state.message,\r\n  online: state.configs.online.config,\r\n  socket: state.socket,\r\n}), {})(Login);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBack from '@material-ui/icons/ArrowBack';\r\nimport shared from '../../shared';\r\nimport { Card, Message, Players } from '../../components';\r\n\r\nimport './Preview.css';\r\n\r\nexport default class Preview extends React.Component {\r\n  static propTypes = {\r\n    socket: PropTypes.object.isRequired,\r\n    history: PropTypes.object.isRequired,\r\n    match: PropTypes.object.isRequired,\r\n    me: PropTypes.object.isRequired,\r\n    message: PropTypes.object.isRequired,\r\n    players: PropTypes.object.isRequired,\r\n    revealedCards: PropTypes.func.isRequired,\r\n    sendMessage: PropTypes.func.isRequired,\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    this.revealed = false;\r\n    this.playersRevealed = [];\r\n  }\r\n\r\n  state = {\r\n    card: '',\r\n  };\r\n\r\n  componentDidMount = () => this.props.socket.emit('card:chosen', this.props.match.params.card);\r\n\r\n  render = () => {\r\n    this.props.revealedCards(this.playersRevealed);\r\n\r\n    return (\r\n      <main className=\"preview\">\r\n        {!this.revealed && <IconButton aria-label=\"delete\" onClick={ this.backHandleClick }>\r\n          <ArrowBack />\r\n        </IconButton>}\r\n        <Message message={ this.props.message } />\r\n        <Players me={ this.props.me } players={ this.props.players } />\r\n        <div className=\"card-front\" onClick={ this.cardHandleClick } role=\"button\">\r\n          <Card card={ this.state.card } />\r\n        </div>\r\n      </main>\r\n    );\r\n  };\r\n\r\n  backHandleClick = () => {\r\n    const { history, socket } = this.props;\r\n\r\n    this.props.sendMessage();\r\n\r\n    socket.emit('card:cleared');\r\n    history.push('/');\r\n  };\r\n\r\n  cardHandleClick = () => {\r\n    const { match, socket } = this.props;\r\n\r\n    if (this.revealed) {\r\n      if (this.playersRevealed < this.props.players.size)\r\n      {\r\n        this.props.sendMessage({ text: 'wait for all players to reveal their cards', type: shared.constants.message.types.warning });\r\n        return;\r\n      }\r\n\r\n      this.backHandleClick();\r\n\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      card: match.params.card,\r\n    });\r\n\r\n    socket.emit('card:reveal', match.params.card);\r\n    this.revealed = true;\r\n  };\r\n}\r\n","import { connect } from 'react-redux';\r\nimport actions from '../../actions';\r\nimport Preview from './Preview';\r\nimport selectors from '../../selectors';\r\n\r\nexport default connect((state) => ({\r\n  me: state.me,\r\n  message: state.message,\r\n  players: selectors.players.getOthers(state.players, state.me.id),\r\n  revealedCards: (playersRevealed) => selectors.players.revealedCards(selectors.players.getOthers(state.players, state.me.id), playersRevealed),\r\n  socket: state.socket,\r\n}), {\r\n  sendMessage: actions.message.send,\r\n})(Preview);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { ChevronLeft } from '@material-ui/icons';\r\nimport {\r\n  Divider,\r\n  List,\r\n  ListItem,\r\n  ListSubheader,\r\n  TextField,\r\n} from '@material-ui/core';\r\n\r\nimport { Title } from '../../components';\r\nimport './Settings.css';\r\n\r\nexport default class Settigs extends React.Component {\r\n  static propTypes = {\r\n    history: PropTypes.object.isRequired,\r\n    configs: PropTypes.object.isRequired,\r\n    updateConfigs: PropTypes.func.isRequired,\r\n  };\r\n\r\n  constructor({ configs }) {\r\n    super();\r\n    const { api, online, stories } = configs;\r\n\r\n    this.state = {\r\n      apiConfig: api.config,\r\n      onlineConfig: online.config,\r\n      storiesConfig: stories.config,\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const { apiConfig, onlineConfig } = this.state;\r\n\r\n    this.props.updateConfigs({\r\n      api: {\r\n        name: 'api',\r\n        config: {\r\n          protocol: apiConfig.protocol,\r\n          host: apiConfig.host,\r\n          port: apiConfig.port,\r\n        },\r\n      },\r\n      online: {\r\n        name: 'online',\r\n        config: {\r\n          room: onlineConfig.room,\r\n          name: onlineConfig.name,\r\n        },\r\n      },\r\n    });\r\n  }\r\n\r\n  render = () => {\r\n    const { apiConfig, onlineConfig } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Title\r\n          label=\"Settings\"\r\n          icon={ <ChevronLeft /> }\r\n          onClick={ this.handleBack } />\r\n\r\n        <main className=\"settings-list\">\r\n          <List subheader={ <ListSubheader>Online</ListSubheader> }>\r\n            <ListItem>\r\n              <form className=\"settings-form\" autoComplete=\"off\">\r\n                <TextField\r\n                  id=\"onlineRoom\"\r\n                  label=\"Room\"\r\n                  value={ onlineConfig.room }\r\n                  onChange={ this.handleInputChange((state, value) => ({ onlineConfig: { ...state.onlineConfig, room: value.toLowerCase() } })) } />\r\n\r\n                <TextField\r\n                  id=\"onlineName\"\r\n                  label=\"Name\"\r\n                  value={ onlineConfig.name }\r\n                  onChange={ this.handleInputChange((state, value) => ({ onlineConfig: { ...state.onlineConfig, name: value.toLowerCase() } })) }\r\n                  inputProps={ {\r\n                    maxLength: '2',\r\n                  } } />\r\n              </form>\r\n            </ListItem>\r\n          </List>\r\n\r\n          <Divider />\r\n\r\n          <List subheader={ <ListSubheader>API</ListSubheader> }>\r\n            <ListItem>\r\n              <form className=\"settings-form\" autoComplete=\"off\">\r\n                <TextField\r\n                  id=\"apiProtocol\"\r\n                  label=\"Protocol\"\r\n                  value={ apiConfig.protocol }\r\n                  onChange={ this.handleInputChange((state, value) => ({ apiConfig: { ...state.apiConfig, protocol: value.toLowerCase() } })) } />\r\n\r\n                <TextField\r\n                  id=\"apiHost\"\r\n                  label=\"Host\"\r\n                  value={ apiConfig.host }\r\n                  onChange={ this.handleInputChange((state, value) => ({ apiConfig: { ...state.apiConfig, host: value.toLowerCase() } })) } />\r\n\r\n                <TextField\r\n                  id=\"apiPort\"\r\n                  label=\"Port\"\r\n                  value={ apiConfig.port }\r\n                  onChange={ this.handleInputChange((state, value) => ({ apiConfig: { ...state.apiConfig, port: value } })) } />\r\n              </form>\r\n            </ListItem>\r\n          </List>\r\n        </main>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  handleInputChange = (func) => (event) => {\r\n    const { value } = event.target;\r\n\r\n    this.setState((state) => func(state, value));\r\n  };\r\n\r\n  handleBack = () => {\r\n    this.props.history.push('/');\r\n  };\r\n}\r\n","import { connect } from 'react-redux';\r\nimport actions from '../../actions';\r\nimport Settings from './Settings';\r\n\r\nexport default connect((state) => ({\r\n  configs: state.configs,\r\n}), {\r\n  updateConfigs: actions.configs.update,\r\n})(Settings);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { ChevronLeft } from '@material-ui/icons';\r\nimport {\r\n  Divider,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListSubheader,\r\n  TextField,\r\n} from '@material-ui/core';\r\n\r\nimport shared from '../../shared';\r\nimport { Title } from '../../components';\r\nimport './Stories.css';\r\n\r\nexport default class Stories extends React.Component {\r\n  static propTypes = {\r\n    history: PropTypes.object.isRequired,\r\n    api: PropTypes.object.isRequired,\r\n  };\r\n\r\n  constructor({ api }) {\r\n    super();\r\n\r\n    this.state = {\r\n      stories: [],\r\n      points: undefined,\r\n      config: api,\r\n    };\r\n\r\n    this.getStories(undefined);\r\n  }\r\n\r\n  async getStories(points) {\r\n    const data = await shared.api.stories.getByProject(process.env.REACT_APP_DEFAULTS_PROJECT, { points }, this.state.config);\r\n\r\n    if (data) {\r\n      this.setState({ stories: data.data });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { stories, points } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Title\r\n          label=\"Stories\"\r\n          icon={ <ChevronLeft /> }\r\n          onClick={ this.handleBack } />\r\n\r\n        <main className=\"stories-list\">\r\n          <List subheader={ <ListSubheader>Search</ListSubheader> }>\r\n            <ListItem className=\"settings-form\">\r\n              <TextField\r\n                id=\"points\"\r\n                label=\"By points\"\r\n                type=\"number\"\r\n                value={ points }\r\n                onBlur={ this.handlePointsBlur() }\r\n                onChange={ this.handlePointsChange() } />\r\n            </ListItem>\r\n          </List>\r\n\r\n          <Divider />\r\n\r\n          <List>\r\n            {\r\n              stories.map((story) => (\r\n                <ListItem key={ story.id }>\r\n                  <ListItemText\r\n                    primary={ `${story.id} (${story.points})` }\r\n                    secondary={ story.title } />\r\n                </ListItem>\r\n              ))\r\n            }\r\n          </List>\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  handlePointsBlur = () => (event) => {\r\n    const { value } = event.target;\r\n\r\n    this.getStories(value);\r\n  };\r\n\r\n  handlePointsChange = () => (event) => {\r\n    const { value } = event.target;\r\n\r\n    this.setState({ points: value });\r\n  };\r\n\r\n  handleBack = () => {\r\n    this.props.history.push('/');\r\n  };\r\n}\r\n","import { connect } from 'react-redux';\r\nimport Stories from './Stories';\r\n\r\nexport default connect((state) => ({\r\n  api: state.configs.api.config,\r\n}), {})(Stories);\r\n","import React from 'react';\r\nimport { HashRouter, Route } from 'react-router-dom';\r\n\r\nimport { About, Home, Login, Preview, Settings, Stories } from './containers';\r\n\r\nconst Router = () => (\r\n  <HashRouter>\r\n    <div className=\"panel\">\r\n      <Route exact path=\"/\" component={ Home } />\r\n      <Route path=\"/cards/:card\" component={ Preview } />\r\n      <Route path=\"/about\" component={ About } />\r\n      <Route path=\"/login\" component={ Login } />\r\n      <Route path=\"/settings\" component={ Settings } />\r\n      <Route path=\"/stories\" component={ Stories } />\r\n    </div>\r\n  </HashRouter>\r\n);\r\n\r\nexport default Router;\r\n","import React from 'react';\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\nimport { blueGrey } from '@material-ui/core/colors';\r\n\r\nimport Router from './Router';\r\nimport './App.css';\r\nimport 'normalize.css';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    type: 'light',\r\n    primary: {\r\n      light: blueGrey[200],\r\n      main: blueGrey[400],\r\n      dark: blueGrey[600],\r\n    },\r\n  },\r\n  typography: {\r\n    useNextVariants: true,\r\n  },\r\n});\r\n\r\nconst App = (props) => (\r\n  <MuiThemeProvider theme={ theme }>\r\n    <Router { ...props } />\r\n  </MuiThemeProvider>\r\n);\r\n\r\nexport default App;\r\n","import localforage from 'localforage';\r\n\r\nimport shared from './shared';\r\n\r\nconst errorStore = localforage.createInstance({\r\n  ...shared.constants.app.db,\r\n  storeName: 'error',\r\n});\r\n\r\nexport default async (message, source, lineno, colno, error) => {\r\n  const key = Date.now().toString();\r\n  const log = {\r\n    message,\r\n    source,\r\n    lineno,\r\n    colno,\r\n    error: {\r\n      message: error.message,\r\n      stack: error.stack,\r\n    },\r\n  };\r\n\r\n  await errorStore.setItem(key, log);\r\n  await shared.api.errors.create(log);\r\n\r\n  return !process.env.REACT_APP_DEBUG;\r\n};\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then((registration) => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport actions from './actions';\r\nimport shared from './shared';\r\nimport App from './App';\r\nimport errorHandler from './error-handler';\r\nimport registerServiceWorker from './registerServiceWorker';\r\nimport configureStore from './store';\r\n\r\nwindow.onerror = errorHandler;\r\nconst store = configureStore();\r\n\r\ninit();\r\n\r\nrender(\r\n  <Provider store={ store }>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\nregisterServiceWorker();\r\n\r\nasync function init() {\r\n  const decks = await shared.api.decks.getAll();\r\n  const api = await shared.api.configs.getByName('api');\r\n  const stories = await shared.api.configs.getByName('stories');\r\n  const online = await shared.api.configs.getByName('online');\r\n\r\n  store.dispatch(actions.decks.update(decks));\r\n  store.dispatch(actions.configs.update({ api, stories, online }));\r\n\r\n  shared.socket.setup(store);\r\n}\r\n","export const CONFIG = 'CONFIG';\r\nexport const DECKS = 'DECKS';\r\nexport const ME = 'ME';\r\nexport const MESSAGE = 'MESSAGE';\r\nexport const INTERNET = 'INTERNET';\r\nexport const PLAYERS = 'PLAYERS';\r\nexport const SOCKET = 'SOCKET';\r\n\r\nexport default {\r\n  CONFIG,\r\n  DECKS,\r\n  ME,\r\n  MESSAGE,\r\n  INTERNET,\r\n  PLAYERS,\r\n  SOCKET,\r\n};\r\n"],"sourceRoot":""}